{"version":3,"sources":["store.js","components/Navbar.js","services/Api.js","services/AuthenticationService.js","pages/Register.js","pages/Login.js","services/EmployeeService.js","components/EditForm.js","components/AddForm.js","pages/Employees.js","App.js","index.js"],"names":["Store","createContext","StoreProvider","props","Provider","value","children","useStore","useContext","useStyles","makeStyles","theme","toolbar","justifyContent","iconButton","fontSize","borderRadius","link","textDecoration","color","avatar","width","height","marginLeft","spacing","Navbar","store","classes","AppBar","Container","maxWidth","Toolbar","className","Typography","variant","Box","display","alignItems","isLoggedIn","to","onClick","localStorage","setItem","setAuthState","user","token","IconButton","Avatar","Badge","split","map","name","toUpperCase","join","AuthenticationAPI","axios","create","baseURL","EmployeeAPI","headers","Authorization","getItem","AuthenticationService","userData","post","container","minHeight","mixins","gridItem","marginTop","submitButton","formControl","marginBottom","paper","padding","info","grey","success","backgroundColor","lighten","green","shape","transition","transitions","duration","enteringScreen","easing","easeInOut","placeholder","Register","useState","email","password","formData","setFormData","setSuccess","history","useHistory","submitEvent","a","preventDefault","response","data","message","useEffect","toastTimeout","setTimeout","clearTimeout","handleChanged","changedEvent","target","id","align","Grid","item","Paper","onSubmit","FormControl","fullWidth","InputLabel","htmlFor","Input","onChange","type","required","Button","size","style","marginRight","cursor","push","Login","prev","method","EmployeeService","get","delete","patch","backdrop","zIndex","modal","title","heading","EditForm","selectedData","isOpen","setIsOpen","handleUpdateEmployee","Backdrop","open","first_name","last_name","gender","AddForm","handleAddEmployee","newEmployee","employee","descendingComparator","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","el","index","sort","headCells","numeric","disablePadding","label","EnhancedTableHead","onSelectAllClick","numSelected","rowCount","onRequestSort","TableHead","TableRow","TableCell","Checkbox","indeterminate","checked","inputProps","headCell","sortDirection","TableSortLabel","active","direction","property","event","visuallyHidden","useToolbarStyles","root","paddingLeft","paddingRight","highlight","palette","primary","main","light","flex","EnhancedTableToolbar","toastMessage","setToastMessage","toastAction","setToastAction","handleDeleteEmployee","handleEditEmployee","useTheme","secondary","length","component","aria-label","flexDirection","table","minWidth","tableRow","border","clip","margin","overflow","position","top","addButton","common","white","dark","Employees","setOrder","setOrderBy","selected","setSelected","page","setPage","rowsPerPage","setRowsPerPage","setData","selectedID","setSelectedID","setSelectedData","editIsOpen","setEditIsOpen","addIsOpen","setAddIsOpen","emptyRows","Math","min","filter","filteredData","mappedData","TableContainer","Table","aria-labelledby","newSelecteds","n","TableBody","slice","row","isItemSelected","indexOf","labelId","hover","selectedIndex","newSelected","concat","handleClick","role","aria-checked","tabIndex","scope","colSpan","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","CircularProgress","paddingTop","App","authState","CssBaseline","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.84066583.chunk.js","sourcesContent":["import { createContext, useContext } from 'react';\n\nconst Store = createContext({});\n\nexport function StoreProvider(props) {\n  return <Store.Provider value={props.value}>{props.children}</Store.Provider>;\n}\n\nexport function useStore() {\n  const store = useContext(Store);\n  return store;\n}\n","import { useStore } from '../store';\nimport { Link } from 'react-router-dom';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport IconButton from '@material-ui/core/IconButton';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport Badge from '@material-ui/core/Badge';\nimport Container from '@material-ui/core/Container';\n\nconst useStyles = makeStyles(theme => ({\n  toolbar: {\n    justifyContent: 'space-between',\n  },\n  iconButton: {\n    fontSize: '1rem',\n    borderRadius: 'unset',\n  },\n  link: {\n    textDecoration: 'none',\n    color: 'inherit',\n  },\n  avatar: {\n    width: 40,\n    height: 40,\n    marginLeft: theme.spacing(2),\n  },\n}));\n\nexport function Navbar() {\n  const store = useStore();\n\n  const classes = useStyles();\n\n  function getUserInitials() {\n    return store.user\n      .split(' ')\n      .map(name => name[0].toUpperCase())\n      .join('');\n  }\n\n  function handleSignOut() {\n    localStorage.setItem('token', '');\n    localStorage.setItem('user', '');\n\n    store.setAuthState({\n      isLoggedIn: false,\n      user: null,\n      token: null,\n    });\n  }\n\n  return (\n    <AppBar>\n      <Container maxWidth=\"lg\">\n        <Toolbar className={classes.toolbar}>\n          <Typography variant=\"h6\">EMPLOYEE DBMS</Typography>\n          <Box display=\"flex\" alignItems=\"center\">\n            {store.isLoggedIn ? (\n              <>\n                <Link\n                  to=\"/login\"\n                  className={classes.link}\n                  onClick={handleSignOut}\n                >\n                  <IconButton color=\"inherit\" className={classes.iconButton}>\n                    Sign Out\n                  </IconButton>\n                </Link>\n                <Avatar className={classes.avatar}>\n                  <Badge>{getUserInitials()}</Badge>\n                </Avatar>\n              </>\n            ) : (\n              <>\n                <Link to=\"/login\" className={classes.link}>\n                  <IconButton color=\"inherit\" className={classes.iconButton}>\n                    Login\n                  </IconButton>\n                </Link>\n                <Link to=\"/register\" className={classes.link}>\n                  <IconButton color=\"inherit\" className={classes.iconButton}>\n                    Register\n                  </IconButton>\n                </Link>\n              </>\n            )}\n          </Box>\n        </Toolbar>\n      </Container>\n    </AppBar>\n  );\n}\n","import axios from 'axios';\n\nexport function AuthenticationAPI() {\n  return axios.create({\n    baseURL: 'http://localhost:4000/api',\n  });\n}\n\nexport function EmployeeAPI() {\n  return axios.create({\n    baseURL: 'http://localhost:4000/api/employees',\n    headers: {\n      Authorization: `Bearer ${localStorage.getItem('token')}`,\n    },\n  });\n}\n","import { AuthenticationAPI } from './Api';\n\nconst AuthenticationService = {\n  register(userData) {\n    return AuthenticationAPI().post('register', { ...userData });\n  },\n  login(userData) {\n    return AuthenticationAPI().post('login', { ...userData });\n  },\n  getEmployees() {\n    return AuthenticationAPI().get('/employees/all');\n  },\n};\n\nexport { AuthenticationService };\n","import { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport FormControl from '@material-ui/core/FormControl';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Container from '@material-ui/core/Container';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport grey from '@material-ui/core/colors/grey';\nimport green from '@material-ui/core/colors/green';\n\nimport { AuthenticationService } from '../services/AuthenticationService';\n\nexport const useStyles = makeStyles(theme => ({\n  container: {\n    minHeight: `calc(100vh - ${theme.mixins.toolbar.minHeight}px)`,\n    display: 'flex',\n    alignItems: 'center',\n  },\n  gridItem: {\n    width: '100%',\n    marginTop: theme.spacing(5),\n  },\n  submitButton: {\n    marginTop: theme.spacing(3),\n  },\n  formControl: {\n    marginBottom: theme.spacing(3),\n  },\n  paper: {\n    padding: theme.spacing(3),\n  },\n  info: {\n    marginTop: theme.spacing(2),\n    color: grey[700],\n  },\n  success: {\n    backgroundColor: lighten(green[500], 0.85),\n    color: green[500],\n    marginTop: theme.spacing(3),\n    padding: theme.spacing(2),\n    borderRadius: theme.shape.borderRadius,\n    transition: theme.transitions.create('all', {\n      duration: theme.transitions.duration.enteringScreen,\n      easing: theme.transitions.easing.easeInOut,\n    }),\n  },\n  placeholder: {\n    marginTop: theme.spacing(3),\n    padding: theme.spacing(2),\n    borderRadius: theme.shape.borderRadius,\n  },\n}));\n\nexport function Register() {\n  const classes = useStyles();\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    password: '',\n  });\n  const [success, setSuccess] = useState(false);\n  const history = useHistory();\n\n  useEffect(() => {\n    const toastTimeout = setTimeout(() => {\n      setSuccess(false);\n    }, 4000);\n    return () => {\n      clearTimeout(toastTimeout);\n    };\n  });\n\n  async function handleSubmit(submitEvent) {\n    submitEvent.preventDefault();\n    try {\n      const response = await AuthenticationService.register(formData);\n      if (response?.data?.message) {\n        setSuccess(true);\n        setFormData({ name: '', email: '', password: '' });\n      }\n    } catch {}\n  }\n\n  const handleChanged = changedEvent => {\n    const value = changedEvent.target.value;\n    const name = changedEvent.target.id;\n    setFormData({ ...formData, [name]: value });\n  };\n\n  return (\n    <Container maxWidth=\"xs\" className={classes.container}>\n      <section>\n        <Typography variant=\"h4\" align=\"center\">\n          Register\n        </Typography>\n        <Typography align=\"center\" className={classes.info}>\n          create account to access the dashboard\n        </Typography>\n        {success && (\n          <div className={classes.success}>\n            <Typography>registration complete</Typography>\n          </div>\n        )}\n        <Grid container>\n          <Grid item className={classes.gridItem}>\n            <Paper className={classes.paper}>\n              <form onSubmit={handleSubmit}>\n                <FormControl fullWidth className={classes.formControl}>\n                  <InputLabel htmlFor=\"name\">Name</InputLabel>\n                  <Input\n                    onChange={handleChanged}\n                    type=\"text\"\n                    value={formData.name}\n                    id=\"name\"\n                    fullWidth\n                    required\n                  />\n                </FormControl>\n                <FormControl fullWidth className={classes.formControl}>\n                  <InputLabel htmlFor=\"email\">Email</InputLabel>\n                  <Input\n                    onChange={handleChanged}\n                    type=\"email\"\n                    value={formData.email}\n                    id=\"email\"\n                    fullWidth\n                    required\n                  />\n                </FormControl>\n                <FormControl fullWidth className={classes.formControl}>\n                  <InputLabel htmlFor=\"password\">Password</InputLabel>\n                  <Input\n                    onChange={handleChanged}\n                    type=\"password\"\n                    value={formData.password}\n                    id=\"password\"\n                    fullWidth\n                    required\n                  />\n                </FormControl>\n                <Button\n                  type=\"submit\"\n                  variant=\"contained\"\n                  color=\"primary\"\n                  size=\"large\"\n                  fullWidth\n                  className={classes.submitButton}\n                >\n                  Sign up\n                </Button>\n              </form>\n            </Paper>\n          </Grid>\n        </Grid>\n        <div\n          style={{ display: 'flex', justifyContent: 'center', marginTop: 16 }}\n        >\n          <Typography style={{ marginRight: 5 }}>\n            Already have an account?{' '}\n          </Typography>\n          <Typography\n            style={{ color: '#3f51b5', cursor: 'pointer' }}\n            onClick={() => {\n              history.push('/login');\n            }}\n          >\n            Sign in\n          </Typography>\n        </div>\n      </section>\n    </Container>\n  );\n}\n","import { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useStore } from '../store';\n\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport FormControl from '@material-ui/core/FormControl';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Container from '@material-ui/core/Container';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport grey from '@material-ui/core/colors/grey';\n\nimport { AuthenticationService } from '../services/AuthenticationService';\n\nexport const useStyles = makeStyles(theme => ({\n  container: {\n    minHeight: `calc(100vh - ${theme.mixins.toolbar.minHeight}px)`,\n    display: 'flex',\n    alignItems: 'center',\n  },\n  gridItem: {\n    width: '100%',\n    marginTop: theme.spacing(5),\n  },\n  submitButton: {\n    marginTop: theme.spacing(3),\n  },\n  formControl: {\n    marginBottom: theme.spacing(3),\n  },\n  paper: {\n    padding: theme.spacing(3),\n  },\n  info: {\n    marginTop: theme.spacing(2),\n    color: grey[700],\n  },\n}));\n\nexport function Login() {\n  const [formData, setFormData] = useState({\n    email: '',\n    password: '',\n  });\n  const history = useHistory();\n  const store = useStore();\n\n  const classes = useStyles();\n\n  async function handleSubmit(submitEvent) {\n    submitEvent.preventDefault();\n    try {\n      const response = await AuthenticationService.login(formData);\n\n      if (response?.data?.token) {\n        const { name, token } = response.data;\n\n        localStorage.setItem('token', token);\n        localStorage.setItem('user', name);\n\n        store.setAuthState({\n          isLoggedIn: true,\n          user: name,\n        });\n\n        history.push('/employees');\n      }\n    } catch {}\n  }\n\n  const handleChanged = changedEvent => {\n    const value = changedEvent.target.value;\n    const name = changedEvent.target.id;\n    setFormData(prev => ({ ...prev, [name]: value }));\n  };\n\n  return (\n    <Container maxWidth=\"xs\" className={classes.container}>\n      <section>\n        <Typography variant=\"h4\" align=\"center\">\n          Log in\n        </Typography>\n        <Typography align=\"center\" className={classes.info}>\n          sign in to access dashboard\n        </Typography>\n        <Grid container>\n          <Grid item className={classes.gridItem}>\n            <Paper className={classes.paper}>\n              <form method=\"post\" onSubmit={handleSubmit}>\n                <FormControl fullWidth className={classes.formControl}>\n                  <InputLabel htmlFor=\"email\">Email</InputLabel>\n                  <Input\n                    onChange={handleChanged}\n                    type=\"email\"\n                    value={formData.email}\n                    id=\"email\"\n                    fullWidth\n                    required\n                  />\n                </FormControl>\n                <FormControl fullWidth className={classes.formControl}>\n                  <InputLabel htmlFor=\"password\">Password</InputLabel>\n                  <Input\n                    onChange={handleChanged}\n                    type=\"password\"\n                    value={formData.password}\n                    id=\"password\"\n                    fullWidth\n                    required\n                  />\n                </FormControl>\n                <Button\n                  type=\"submit\"\n                  variant=\"contained\"\n                  color=\"primary\"\n                  size=\"large\"\n                  fullWidth\n                  className={classes.submitButton}\n                >\n                  Sign in\n                </Button>\n              </form>\n            </Paper>\n          </Grid>\n        </Grid>\n        <div\n          style={{ display: 'flex', justifyContent: 'center', marginTop: 16 }}\n        >\n          <Typography style={{ marginRight: 5 }}>\n            Don't have an account?{' '}\n          </Typography>\n          <Typography\n            style={{ color: '#3f51b5', cursor: 'pointer' }}\n            onClick={() => {\n              history.push('/register');\n            }}\n          >\n            register\n          </Typography>\n        </div>\n      </section>\n    </Container>\n  );\n}\n","import { EmployeeAPI } from './Api';\n\nconst EmployeeService = {\n  getEmployees() {\n    return EmployeeAPI().get('/');\n  },\n  deleteEmployee(id) {\n    return EmployeeAPI().delete(`/${id}/delete`);\n  },\n  editEmployee(id, formData) {\n    return EmployeeAPI().patch(`/${id}/edit`, formData);\n  },\n  addEmployee(formData) {\n    return EmployeeAPI().post(`/add`, formData);\n  },\n};\n\nexport { EmployeeService };\n","import { useState } from 'react';\n\nimport Grid from '@material-ui/core/Grid';\nimport FormControl from '@material-ui/core/FormControl';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Container from '@material-ui/core/Container';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport grey from '@material-ui/core/colors/grey';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { Typography } from '@material-ui/core';\n\nimport { EmployeeService } from '../services/EmployeeService';\n\nexport const useStyles = makeStyles(theme => ({\n  container: {\n    minHeight: `calc(100vh - ${theme.mixins.toolbar.minHeight}px)`,\n    display: 'flex',\n    alignItems: 'center',\n  },\n  gridItem: {\n    width: '100%',\n    marginTop: theme.spacing(8),\n  },\n  submitButton: {\n    marginTop: theme.spacing(3),\n  },\n  formControl: {\n    marginBottom: theme.spacing(3),\n  },\n  paper: {\n    padding: theme.spacing(3),\n  },\n  info: {\n    marginTop: theme.spacing(2),\n    color: grey[700],\n  },\n  backdrop: {\n    zIndex: theme.zIndex.modal,\n  },\n  title: {\n    marginBottom: theme.spacing(2),\n  },\n  heading: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'baseline',\n  },\n}));\n\nexport function EditForm({\n  selectedData,\n  isOpen,\n  setIsOpen,\n  handleUpdateEmployee,\n}) {\n  const classes = useStyles();\n  const [formData, setFormData] = useState({ ...selectedData });\n\n  async function handleSubmit(submitEvent) {\n    submitEvent.preventDefault();\n    try {\n      const response = await EmployeeService.editEmployee(\n        selectedData.id,\n        formData\n      );\n      if (response?.data?.message) {\n        handleUpdateEmployee(formData);\n      }\n    } catch {}\n  }\n\n  const handleChanged = changedEvent => {\n    const value = changedEvent.target.value;\n    const name = changedEvent.target.id;\n    setFormData({ ...formData, [name]: value });\n  };\n\n  return (\n    <Backdrop open={isOpen} className={classes.backdrop}>\n      <Container maxWidth=\"xs\" className={classes.container}>\n        <Grid container>\n          <Grid item className={classes.gridItem}>\n            <Paper className={classes.paper}>\n              <div className={classes.heading}>\n                <Typography variant=\"h6\" className={classes.title}>\n                  Edit Employee\n                </Typography>\n                <IconButton\n                  onClick={() => {\n                    setIsOpen(false);\n                  }}\n                >\n                  <CloseIcon />\n                </IconButton>\n              </div>\n              <form onSubmit={handleSubmit}>\n                <FormControl fullWidth className={classes.formControl}>\n                  <InputLabel htmlFor=\"first_name\">FirstName</InputLabel>\n                  <Input\n                    onChange={handleChanged}\n                    type=\"text\"\n                    value={formData.first_name}\n                    id=\"first_name\"\n                    fullWidth\n                    required\n                  />\n                </FormControl>\n                <FormControl fullWidth className={classes.formControl}>\n                  <InputLabel htmlFor=\"last_name\">LastName</InputLabel>\n                  <Input\n                    onChange={handleChanged}\n                    type=\"text\"\n                    value={formData.last_name}\n                    id=\"last_name\"\n                    fullWidth\n                    required\n                  />\n                </FormControl>\n                <FormControl fullWidth className={classes.formControl}>\n                  <InputLabel htmlFor=\"email\">Email</InputLabel>\n                  <Input\n                    onChange={handleChanged}\n                    type=\"email\"\n                    value={formData.email}\n                    id=\"email\"\n                    fullWidth\n                    required\n                  />\n                </FormControl>\n                <FormControl fullWidth className={classes.formControl}>\n                  <InputLabel htmlFor=\"gender\">Gender</InputLabel>\n                  <Input\n                    onChange={handleChanged}\n                    type=\"gender\"\n                    value={formData.gender}\n                    id=\"gender\"\n                    fullWidth\n                    required\n                  />\n                </FormControl>\n                <Button\n                  type=\"submit\"\n                  variant=\"contained\"\n                  color=\"primary\"\n                  size=\"large\"\n                  fullWidth\n                  className={classes.submitButton}\n                >\n                  Submit\n                </Button>\n              </form>\n            </Paper>\n          </Grid>\n        </Grid>\n      </Container>\n    </Backdrop>\n  );\n}\n","import { useState } from 'react';\n\nimport Grid from '@material-ui/core/Grid';\nimport FormControl from '@material-ui/core/FormControl';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Container from '@material-ui/core/Container';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport grey from '@material-ui/core/colors/grey';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { Typography } from '@material-ui/core';\n\nimport { EmployeeService } from '../services/EmployeeService';\n\nexport const useStyles = makeStyles(theme => ({\n  container: {\n    minHeight: `calc(100vh - ${theme.mixins.toolbar.minHeight}px)`,\n    display: 'flex',\n    alignItems: 'center',\n  },\n  gridItem: {\n    width: '100%',\n    marginTop: theme.spacing(8),\n  },\n  submitButton: {\n    marginTop: theme.spacing(3),\n  },\n  formControl: {\n    marginBottom: theme.spacing(3),\n  },\n  paper: {\n    padding: theme.spacing(3),\n  },\n  info: {\n    marginTop: theme.spacing(2),\n    color: grey[700],\n  },\n  backdrop: {\n    zIndex: theme.zIndex.modal,\n  },\n  title: {\n    marginBottom: theme.spacing(2),\n  },\n  heading: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'baseline',\n  },\n}));\n\nexport function AddForm({ isOpen, setIsOpen, handleAddEmployee }) {\n  const classes = useStyles();\n  const [formData, setFormData] = useState({\n    first_name: '',\n    last_name: '',\n    email: '',\n    gender: '',\n  });\n\n  async function handleSubmit(submitEvent) {\n    submitEvent.preventDefault();\n    try {\n      const response = await EmployeeService.addEmployee(formData);\n      if (response?.data?.message) {\n        const newEmployee = response.data.employee;\n        handleAddEmployee(newEmployee);\n      }\n    } catch {}\n  }\n\n  const handleChanged = changedEvent => {\n    const value = changedEvent.target.value;\n    const name = changedEvent.target.id;\n    setFormData({ ...formData, [name]: value });\n  };\n\n  return (\n    <Backdrop open={isOpen} className={classes.backdrop}>\n      <Container maxWidth=\"xs\" className={classes.container}>\n        <Grid container>\n          <Grid item className={classes.gridItem}>\n            <Paper className={classes.paper}>\n              <div className={classes.heading}>\n                <Typography variant=\"h6\" className={classes.title}>\n                  Add Employee\n                </Typography>\n                <IconButton\n                  onClick={() => {\n                    setIsOpen(false);\n                  }}\n                >\n                  <CloseIcon />\n                </IconButton>\n              </div>\n              <form onSubmit={handleSubmit}>\n                <FormControl fullWidth className={classes.formControl}>\n                  <InputLabel htmlFor=\"first_name\">FirstName</InputLabel>\n                  <Input\n                    onChange={handleChanged}\n                    type=\"text\"\n                    value={formData.first_name}\n                    id=\"first_name\"\n                    fullWidth\n                    required\n                  />\n                </FormControl>\n                <FormControl fullWidth className={classes.formControl}>\n                  <InputLabel htmlFor=\"last_name\">LastName</InputLabel>\n                  <Input\n                    onChange={handleChanged}\n                    type=\"text\"\n                    value={formData.last_name}\n                    id=\"last_name\"\n                    fullWidth\n                    required\n                  />\n                </FormControl>\n                <FormControl fullWidth className={classes.formControl}>\n                  <InputLabel htmlFor=\"email\">Email</InputLabel>\n                  <Input\n                    onChange={handleChanged}\n                    type=\"email\"\n                    value={formData.email}\n                    id=\"email\"\n                    fullWidth\n                    required\n                  />\n                </FormControl>\n                <FormControl fullWidth className={classes.formControl}>\n                  <InputLabel htmlFor=\"gender\">Gender</InputLabel>\n                  <Input\n                    onChange={handleChanged}\n                    type=\"gender\"\n                    value={formData.gender}\n                    id=\"gender\"\n                    fullWidth\n                    required\n                  />\n                </FormControl>\n                <Button\n                  type=\"submit\"\n                  variant=\"contained\"\n                  color=\"primary\"\n                  size=\"large\"\n                  fullWidth\n                  className={classes.submitButton}\n                >\n                  Submit\n                </Button>\n              </form>\n            </Paper>\n          </Grid>\n        </Grid>\n      </Container>\n    </Backdrop>\n  );\n}\n","import { useState, useEffect } from 'react';\n\nimport Container from '@material-ui/core/Container';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport AddIcon from '@material-ui/icons/Add';\nimport { lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport green from '@material-ui/core/colors/green';\n\nimport { EmployeeService } from '../services/EmployeeService';\nimport { EditForm } from '../components/EditForm';\nimport { AddForm } from '../components/AddForm';\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  {\n    id: 'first_name',\n    numeric: false,\n    disablePadding: true,\n    label: 'First Name',\n  },\n  { id: 'last_name', numeric: false, disablePadding: true, label: 'Last Name' },\n  { id: 'email', numeric: false, disablePadding: false, label: 'Email' },\n  { id: 'gender', numeric: false, disablePadding: false, label: 'Gender' },\n];\n\nfunction EnhancedTableHead(props) {\n  const {\n    classes,\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort,\n  } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ 'aria-label': 'select all employees' }}\n          />\n        </TableCell>\n        {headCells.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight: {\n    color: theme.palette.primary.main,\n    backgroundColor: lighten(theme.palette.primary.light, 0.85),\n  },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const {\n    toastMessage,\n    setToastMessage,\n    toastAction,\n    setToastAction,\n    numSelected,\n    handleDeleteEmployee,\n    handleEditEmployee,\n  } = props;\n  const classes = useToolbarStyles();\n  const theme = useTheme();\n\n  useEffect(() => {\n    const toastTimeout = setTimeout(() => {\n      setToastMessage('');\n      setToastAction('');\n    }, 4000);\n    return () => {\n      clearTimeout(toastTimeout);\n    };\n  });\n\n  return (\n    <Toolbar\n      className={`${classes.root} ${numSelected > 0 && classes.highlight}`}\n      style={{\n        backgroundColor:\n          toastAction === 'add'\n            ? lighten(green[500], 0.85)\n            : toastAction === 'delete'\n            ? lighten(theme.palette.secondary.light, 0.85)\n            : toastAction === 'update'\n            ? lighten(theme.palette.primary.light, 0.85)\n            : null,\n        color:\n          toastAction === 'add'\n            ? green[500]\n            : toastAction === 'delete'\n            ? theme.palette.secondary.main\n            : toastAction === 'update'\n            ? theme.palette.primary.main\n            : null,\n      }}\n    >\n      {toastMessage.length > 0 && <Typography>{toastMessage}</Typography>}\n      {numSelected > 0 && (\n        <Typography\n          className={classes.title}\n          color=\"inherit\"\n          variant=\"subtitle1\"\n          component=\"div\"\n        >\n          {numSelected} selected\n        </Typography>\n      )}\n\n      {numSelected === 0 && toastMessage.length === 0 && (\n        <Typography\n          className={classes.title}\n          variant=\"h6\"\n          id=\"tableTitle\"\n          component=\"div\"\n        >\n          Employee List\n        </Typography>\n      )}\n\n      {numSelected > 0 && (\n        <>\n          <IconButton aria-label=\"delete\" onClick={handleDeleteEmployee}>\n            <DeleteIcon />\n          </IconButton>\n          <IconButton aria-label=\"edit\" onClick={handleEditEmployee}>\n            <EditIcon />\n          </IconButton>\n        </>\n      )}\n    </Toolbar>\n  );\n};\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    minHeight: `calc(100vh - ${theme.mixins.toolbar.minHeight}px)`,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  tableRow: {\n    '&.Mui-selected, &.Mui-selected:hover': {\n      backgroundColor: lighten(theme.palette.primary.light, 0.85),\n    },\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n  addButton: {\n    marginTop: theme.spacing(2),\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.common.white,\n    '&:hover': {\n      backgroundColor: theme.palette.primary.dark,\n    },\n    '& svg': {\n      fontSize: '2rem',\n    },\n  },\n}));\n\nexport function Employees() {\n  const [order, setOrder] = useState('asc');\n  const [orderBy, setOrderBy] = useState('gender');\n  const [selected, setSelected] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(0);\n  const [data, setData] = useState([]);\n  const [selectedID, setSelectedID] = useState(null);\n  const [selectedData, setSelectedData] = useState({});\n  const [editIsOpen, setEditIsOpen] = useState(false);\n  const [addIsOpen, setAddIsOpen] = useState(false);\n  const [toastMessage, setToastMessage] = useState('');\n  const [toastAction, setToastAction] = useState('');\n  const classes = useStyles();\n\n  useEffect(() => {\n    (async function getEmployees() {\n      const response = await EmployeeService.getEmployees();\n      setData(response.data);\n      if (response?.data?.length > 0) {\n        setRowsPerPage(10);\n      }\n    })();\n  }, []);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = event => {\n    if (event.target.checked) {\n      const newSelecteds = data.map(n => n.first_name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, first_name) => {\n    const selectedIndex = selected.indexOf(first_name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, first_name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const isSelected = first_name => selected.indexOf(first_name) !== -1;\n\n  const emptyRows =\n    rowsPerPage - Math.min(rowsPerPage, data.length - page * rowsPerPage);\n\n  const handleDeleteEmployee = async () => {\n    const response = await EmployeeService.deleteEmployee(selectedID);\n    if (response?.data?.message) {\n      // deterministic remove data from ui\n      setData(prev => prev.filter(item => item.id !== selectedID));\n      setSelected([]);\n      setToastMessage('employee was deleted');\n      setToastAction('delete');\n    }\n  };\n\n  const handleEditEmployee = async () => {\n    const filteredData = data.filter(item => item.id === selectedID)[0];\n    setSelectedData(filteredData);\n    setEditIsOpen(true);\n  };\n\n  const handleUpdateEmployee = async formData => {\n    const mappedData = data.map(item => {\n      if (item.id === formData.id) {\n        return { ...item, ...formData };\n      }\n      return item;\n    });\n    setData(mappedData);\n    setEditIsOpen(false);\n    setSelected([]);\n    setToastMessage('employee was updated');\n    setToastAction('update');\n  };\n\n  const handleAddEmployee = async newEmployee => {\n    setData(prev => [...prev, newEmployee]);\n    setAddIsOpen(false);\n    setToastMessage('employee was added');\n    setToastAction('add');\n  };\n\n  return (\n    <>\n      {editIsOpen && (\n        <EditForm\n          selectedData={selectedData}\n          isOpen={editIsOpen}\n          setIsOpen={setEditIsOpen}\n          handleUpdateEmployee={handleUpdateEmployee}\n        />\n      )}\n      {addIsOpen && (\n        <AddForm\n          isOpen={addIsOpen}\n          setIsOpen={setAddIsOpen}\n          handleAddEmployee={handleAddEmployee}\n        />\n      )}\n      <Container maxWidth=\"lg\" className={classes.container}>\n        {data.length > 0 ? (\n          <>\n            <div className={classes.root}>\n              <Paper className={classes.paper}>\n                <EnhancedTableToolbar\n                  toastMessage={toastMessage}\n                  setToastMessage={setToastMessage}\n                  toastAction={toastAction}\n                  setToastAction={setToastAction}\n                  numSelected={selected.length}\n                  handleDeleteEmployee={handleDeleteEmployee}\n                  handleEditEmployee={handleEditEmployee}\n                />\n                <TableContainer>\n                  <Table\n                    className={classes.table}\n                    aria-labelledby=\"tableTitle\"\n                    size=\"small\"\n                    aria-label=\"enhanced employees table\"\n                  >\n                    <EnhancedTableHead\n                      classes={classes}\n                      numSelected={selected.length}\n                      order={order}\n                      orderBy={orderBy}\n                      onSelectAllClick={handleSelectAllClick}\n                      onRequestSort={handleRequestSort}\n                      rowCount={data.length}\n                    />\n                    <TableBody>\n                      {stableSort(data, getComparator(order, orderBy))\n                        .slice(\n                          page * rowsPerPage,\n                          page * rowsPerPage + rowsPerPage\n                        )\n                        .map((row, index) => {\n                          const isItemSelected = isSelected(row.first_name);\n                          const labelId = `enhanced-table-checkbox-${index}`;\n\n                          return (\n                            <TableRow\n                              hover\n                              onClick={event => {\n                                handleClick(event, row.first_name);\n                                setSelectedID(row.id);\n                              }}\n                              role=\"checkbox\"\n                              aria-checked={isItemSelected}\n                              tabIndex={-1}\n                              key={row.first_name}\n                              selected={isItemSelected}\n                              className={classes.tableRow}\n                            >\n                              <TableCell padding=\"checkbox\">\n                                <Checkbox\n                                  color=\"primary\"\n                                  checked={isItemSelected}\n                                  inputProps={{ 'aria-labelledby': labelId }}\n                                />\n                              </TableCell>\n                              <TableCell\n                                component=\"th\"\n                                id={labelId}\n                                scope=\"row\"\n                                padding=\"none\"\n                              >\n                                {row.first_name}\n                              </TableCell>\n                              <TableCell align=\"left\">\n                                {row.last_name}\n                              </TableCell>\n                              <TableCell align=\"left\">{row.email}</TableCell>\n                              <TableCell align=\"left\">{row.gender}</TableCell>\n                            </TableRow>\n                          );\n                        })}\n                      {emptyRows > 0 && (\n                        <TableRow style={{ height: 33 * emptyRows }}>\n                          <TableCell colSpan={6} />\n                        </TableRow>\n                      )}\n                    </TableBody>\n                  </Table>\n                </TableContainer>\n                <TablePagination\n                  rowsPerPageOptions={[]}\n                  component=\"div\"\n                  count={data.length}\n                  rowsPerPage={rowsPerPage}\n                  page={page}\n                  onChangePage={handleChangePage}\n                  onChangeRowsPerPage={handleChangeRowsPerPage}\n                />\n              </Paper>\n            </div>\n            <IconButton\n              aria-label=\"add employee\"\n              className={classes.addButton}\n              onClick={() => {\n                setAddIsOpen(true);\n                setSelected([]);\n              }}\n            >\n              <AddIcon />\n            </IconButton>\n          </>\n        ) : (\n          <CircularProgress />\n        )}\n      </Container>\n    </>\n  );\n}\n","import { useState } from 'react';\nimport { StoreProvider } from './store';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\n\nimport { Navbar } from './components/Navbar';\nimport { Register } from './pages/Register';\nimport { Login } from './pages/Login';\nimport { Employees } from './pages/Employees';\n\nconst useStyles = makeStyles(theme => ({\n  main: {\n    paddingTop: theme.mixins.toolbar.minHeight,\n  },\n}));\n\nfunction App() {\n  const [authState, setAuthState] = useState({\n    isLoggedIn: localStorage.getItem('token') ? true : false,\n    user: localStorage.getItem('user') || null,\n  });\n\n  const classes = useStyles();\n\n  return (\n    <StoreProvider value={{ ...authState, setAuthState }}>\n      <CssBaseline />\n      <BrowserRouter>\n        <Navbar />\n        <main className={classes.main}>\n          <Switch>\n            <Route exact path=\"/\">\n              {authState.isLoggedIn ? (\n                <Redirect to=\"/employees\" />\n              ) : (\n                <Redirect to=\"/register\" />\n              )}\n            </Route>\n            <Route path=\"/register\">\n              <Register />\n            </Route>\n            <Route path=\"/login\">\n              <Login />\n            </Route>\n            <Route path=\"/employees\">\n              {authState.isLoggedIn ? <Employees /> : <Redirect to=\"/login\" />}\n            </Route>\n          </Switch>\n        </main>\n      </BrowserRouter>\n    </StoreProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}